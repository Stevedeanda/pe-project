
/* reset, setup */

/** {
	box-sizing: border-box;
}*/

* {
	border: 1px solid red;
	font: unset;
	color: black;
	margin: 0;
}

a {
	display: block;
	color: inherit;
	text-decoration: none;
}


/* This is a list of decendant combinators */ 

p a, li a {
	display: inline-block;
	text-decoration: underline;
	color: blue;
}

/* more example of hover */

p a:hover, li a:hover {
	color: orange;
}


body {
	margin: 0;
	border: 2px solid red;
	background-color: lightblue;
}

img, svg {
	display: block;
	width: 100%;
	height: auto;
}

/* STRUCTURE */

/* inner-column and my-cool-module are custom elements.
	We gave it display: block to be able to put other elements,;
	inside of it. */

inner-column {
	display: block;
	padding: 20px;
	max-width: 600px;
	margin-right: auto;
	margin-left: auto;
}

header, footer {
	background-color: cyan;
}

/* This is a decendant combinator, the space inbetween
	each element is what makes it a descendant and to pick that
	element. */

header nav {
	margin-top: 20px;
}

header nav a {
	display: inline-block;
	padding: 10px;
	background-color: darkgray;
}

/* :hover state... */

header nav a:hover {
	background-color: white;
	outline: none;
}

/* :focus state.... */

header nav a:focus {
	background-color: white;
}

/* :visited state... */

/*header nav a:visited {
	background-color: silver;
}
*/
/* doesn't need to be a link to be able to use hover */

header:hover {
	background-color: pink;
}

/* able to change the nav anchor aswell as the header in hover,
	by using the descent combinator */

header:hover nav a {
	background-color: violet;
}

/* :active state... is what will happen when button is pressed */

header nav a:active {
	color: pink;
	background-color: white;
}


/* This is a direct child combinator.
	it only selects the element under the parent element.
	It only picks the one anchor element that is under
	inner-column parent. */

header inner-column > a {
	fill: red;
	max-width: 60px;
}

/* TYPOGRAPHY */

mark {
	background-color: wheat;
}

em {
	font-style: italic;
}

strong {
	font-weight: 700px;
}

section {
	background-color: lightgray
}


/* ARTICLE */

article {
	padding-top: 60px;
	padding-bottom: 60px;
}

article h1 {
	font-family: sans-serif;
	font-size: 30px;
	font-weight: 700;
	line-height: 1.1;
	color: purple;
}

article p {
	font-family: serif;
	font-size: 1rem;
	line-height: 1.4;
}


/* Highlights any empty p elements, can be used with any element */
p:empty {
	border: 3px solid blue;
	padding: 10px;
}


/* :first-of-type state.... */

my-cool-module p:first-of-type {
	color: orange;
	font-size: 40px;
}

article h1 + p {
	color:  red;
	margin-top: 20px;
}

article blockquote {
	background-color: white;
	padding: 20px;
	border-left: 5px solid blue;
}

article p + blockquote {
	margin-top: 20px;
}

article h2 {
	font-family: sans-serif;
	font-size: 24px;
	font-weight: 700;
	line-height: 1.1;
	color: purple;
}

article blockquote + h2 {
	margin-top: 2rem;
}

article h2 + p {
	margin-top: 1rem;
}

article p + p {
	margin-top: 1rem;
}

article ol, article ul {
	padding-top: 1rem;
	padding-bottom: 1rem;
}

article li + li {
	margin-top: 1rem;
}

article h3 {
	font-family: sans-serif;
	font-size: 18px;
	font-weight: 700;
	line-height: 1.1;
	text-transform:  uppercase;
}

article p + h3 {
	margin-top: 2rem;
}

article picture + h2 {
	margin-top: 1.5rem;
}

article picture {
	max-width: 700px;
}



/* MODULE */

my-cool-module {
	display: block;
	padding-top: 40px;
	padding-bottom: 40px;
}


my-cool-module h1 {
	font-family: sans-serif;
	font-size: 30px;
	font-weight: 700;
	line-height: 1.1;
	margin-bottom: 20px;
}

input {
	display: block;
	width: 100px;
	height: 100px;
	appearance: none; /*this resets the input*/
	border: 5px solid lightblue;
	background-color: navy;
}

/* :checked state.... */

input:checked {
	border: 5px solid purple;
	background-color: violet;
}

.text {
	display: block;
	appearance: none; /*this resets the input*/
	border: 5px solid lightblue;
	background-color: navy;
}

.text:focus {
	border: 5px solid purple;
	background-color: violet;
	font-size: 30px;
}

/* It will color red the first of each nav element */

nav a:first-of-type {
	color: red;
}

/* :last-of-type state....*/
/* it will color blue the last of each nav element */

nav a:last-of-type {
	color: blue;
}

/* :nth-of-type state.....*/
/* it will allow you to pick the number 
	to which you will make the changes */

/*a:nth-of-type(2) {
	background-color: white;
}*/

/* when you add "2n", it will grab every second link */

/*a:nth-of-type(2n) {
	color: red;
	border: 1px solid orange;
}*/

/* you can do every "7n" but you want it to start on 4 instead of 7,
	you put a "-3", it subtracts 7-3=4. Starting at 4, it will pick
	every 7th link. */

/*a:nth-of-type(7n-3) {
	color: red;
	border: 1px solid orange;
}*/


/* when you add it, it will not add to the number but start at
	the number following the "+". In this instance, "+3" means
	it will start on 3rd link." */

/*a:nth-of-type(7n+3) {
	color: red;
	border: 1px solid orange;
}*/

/* if you write "even" or "odd", it will select the approoiate
	elements according to if they are odd or even. */

/*a:nth-of-type(even) {
	color: red;
	border: 1px solid orange;
}*/



















